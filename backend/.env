# // dependencies
# // cors - allow frontend IP to access backend
# // dotenv - using this we can use environment variables in our project 
# // express package  - using this we can create api's
# // jsonwebtoken - can enable user authentication, user will be logged in on our website 
# // mongoose - it is our database connectivity
# // multer - this allow us to store the images on our cloudinary storage
# // nodemon - will restart the backend whenever we make changes in our code
# // install razorpay and stripe to setup online payment integration 
# // validator - check whether the data coming from user is valid or not 
# // bycrpt package - using this we can encrypt the user password and store in our database 

# // folder structure

# // config folder - we store all the configurations 
# // middleware - we will store all the backend middleware
# // models - we store the models of our mongoose where we define our schema
# // controllers - in which we manage all the logics of our backend
# // routes - we will manage the express server's routes 
# //
# // we will use the npm run start command while deployment but use npm run server / dev while development 


MONGODB_URL = "mongodb+srv://Saicharan:Nanna3334444@cluster0.jynaj.mongodb.net/e-commerce?retryWrites=true&w=majority"
CLOUDINARY_API_KEY = "949233359621131"
CLOUDINARY_SECRET_KEY = "R1m6RUtt0aQm31oeLZsglzscX-Y"
CLOUDINARY_NAME = "dthdlhnc2"
JWT_SECRET = "saicharanramakrishnaannaammanannashreeramahanuma"
ADMIN_EMAIL = "amandusaicharan13@gmail.com"
ADMIN_PASSWORD = "shreerama13"
RAZORPAY_KEY_SECRET =  'Hh6l7IOCIV89OoVLrHHHpilN'
RAZORPAY_KEY_ID = 'rzp_test_3dTXvM5RMjR5MI'